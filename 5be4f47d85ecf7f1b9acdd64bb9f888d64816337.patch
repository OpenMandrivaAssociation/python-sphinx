From 5be4f47d85ecf7f1b9acdd64bb9f888d64816337 Mon Sep 17 00:00:00 2001
From: Takeshi KOMIYA <i.tkomiya@gmail.com>
Date: Wed, 26 Jan 2022 21:09:48 +0900
Subject: [PATCH] Fix #10121: html: <div> tag for admonition is not closed w/
 docutils-0.18

Since v0.18, docutils has output <aside> tag to represent admonitions.
On the other hand, our custom HTML Writer overrides the handler for
admonition nodes halfly.  As a result, the opening and closing tags
become mismatched.  This fully overrides the handler to use <div> tag to
represent admonitions.
---
 sphinx/writers/html.py  | 5 ++++-
 sphinx/writers/html5.py | 5 ++++-
 2 files changed, 8 insertions(+), 2 deletions(-)

diff --git a/sphinx/writers/html.py b/sphinx/writers/html.py
index 765a880295..34e76403fc 100644
--- a/sphinx/writers/html.py
+++ b/sphinx/writers/html.py
@@ -14,7 +14,7 @@
 import re
 import urllib.parse
 import warnings
-from typing import TYPE_CHECKING, Iterable, Tuple, cast
+from typing import TYPE_CHECKING, Iterable, Optional, Tuple, cast
 
 from docutils import nodes
 from docutils.nodes import Element, Node, Text
@@ -285,6 +285,9 @@ def visit_admonition(self, node: Element, name: str = '') -> None:
             node.insert(0, nodes.title(name, admonitionlabels[name]))
         self.set_first_last(node)
 
+    def depart_admonition(self, node: Optional[Element] = None) -> None:
+        self.body.append('</div>\n')
+
     def visit_seealso(self, node: Element) -> None:
         self.visit_admonition(node, 'seealso')
 
diff --git a/sphinx/writers/html5.py b/sphinx/writers/html5.py
index 2059e07448..b9d0f648c9 100644
--- a/sphinx/writers/html5.py
+++ b/sphinx/writers/html5.py
@@ -13,7 +13,7 @@
 import re
 import urllib.parse
 import warnings
-from typing import TYPE_CHECKING, Iterable, Set, Tuple, cast
+from typing import TYPE_CHECKING, Iterable, Optional, Set, Tuple, cast
 
 from docutils import nodes
 from docutils.nodes import Element, Node, Text
@@ -259,6 +259,9 @@ def visit_admonition(self, node: Element, name: str = '') -> None:
         if name:
             node.insert(0, nodes.title(name, admonitionlabels[name]))
 
+    def depart_admonition(self, node: Optional[Element] = None) -> None:
+        self.body.append('</div>\n')
+
     def visit_seealso(self, node: Element) -> None:
         self.visit_admonition(node, 'seealso')
 
